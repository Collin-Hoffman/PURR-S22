"""
Written by Collin Hoffman,some functions are modified from the below document.

4/7/2022 as part of Dr. Gang Shao's research.

bag_of_words_matrix.py

Original Credits:

Intro_To_NLP_Part1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16_eYHgw8JM3RyPT9NCyyczDaJRojyrHj

Author: Vishnu Teja Narapareddy

E-mail: vnarapar@purdue.edu

Date: September 27th 2021

# Intro to Natural Language Processing Part 1
"""

import nltk
from sklearn.feature_extraction.text import CountVectorizer

#import pandas
import pandas as pd



phrase = input("Enter a word/phrase to convert to snakecase: ")

print(phrase)

#initialize vectorizer as function
vectorizer = CountVectorizer()

split_words = phrase.split(",")

print(split_words)

new_words = []
        
 
for word in split_words:
    word = word.strip()
    word = word.replace(" ", "_")

    new_words.append(word)
    
print(new_words)

#for each list in tags_list, join the list together
    
final_sen = " ".join(new_words)

print(final_sen)
           
newer_list = final_sen

#now have a list of strings in new_list

#create a matrix by transforming/vectorizing new_list
matrix = vectorizer.fit_transform(newer_list)

#perform matrix multiplication
matrix_end = matrix.T * matrix

#set the columns of the dataframe to the feature names
names = vectorizer.get_feature_names()
#turn matrix to an array to a dataframe
df = pd.DataFrame(matrix_end.toarray(), columns = names, index = names)
